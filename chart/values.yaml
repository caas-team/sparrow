# Default values for sparrow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/caas-team/sparrow
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000
  supplementalGroups:
    - 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env: {}
# HTTP_PROXY:
# HTTPS_PROXY:
# NO_PROXY:
# LOG_LEVEL:
# LOG_FORMAT:

# -- define a network policy that will
# open egress traffic to a proxy
networkPolicies:
  proxy:
    enabled: false
    # ip: 1.2.3.4
    # port: 8080

resources: {}
# resources:
#   limits:
#     cpu: 500m
#     memory: 512Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi

# -- Specifies the configuration for a readiness probe to check if the sparrow is ready to serve traffic.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  enabled: true
  path: /
  failureThreshold: 3
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

# -- Specifies the configuration for a liveness probe to check if the sparrow is still running.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  enabled: false
  path: /
  failureThreshold: 3
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

# -- Specifies the configuration for a startup probe to check if the sparrow application is started.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe:
  enabled: false
  path: /
  failureThreshold: 10
  initialDelaySeconds: 10
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1

nodeSelector: {}

tolerations: []

affinity: {}

# -- Extra command line start parameters
# see: https://github.com/caas-team/sparrow/blob/main/docs/sparrow_run.md
extraArgs: {}

# -- extra environment variables
# Allows you to set environment variables through secrets you defined outside of the helm chart
# Useful for sensitive information like the http loader token
envFromSecrets:
  []
  # - name: SPARROW_LOADER_HTTP_TOKEN
  #   valueFrom:
  #     secretName: sparrow-auth
  #     key: SPARROW_LOADER_HTTP_TOKEN

# -- Sparrow configuration read on startup
# see: https://github.com/caas-team/sparrow/blob/main/docs/sparrow_run.md
sparrowConfig:
  name: sparrow.com
  loader:
    type: file
    interval: 30s
    file:
      path: /config/checks.yaml
# name: sparrow.com
# api:
#   address:
# loader:
#   type: http | file
#   interval: 30s
#   http:
#     url: https://myconfig.example.com/config.yaml
#     token: ""
#     timeout: 30s
#     retry:
#       delay: 10s
#       count: 5
#   file:
#     path: /config/checks.yaml
# targetManager:
#   type: gitlab
#   checkInterval: 300s
#   unhealthyThreshold: 600s
#   registrationInterval: 300s
#   updateInterval: 900s
#   gitlab:
#     token: ""
#     baseUrl: https://gitlab.com
#     projectId: ""

# -- Check configuration of the Sparrow read on runtime
# see: https://github.com/caas-team/sparrow?tab=readme-ov-file#checks
checksConfig: {}
# health:
#   interval: 15s
#   timeout: 10s
#   retry:
#     count: 3
#     delay: 1s
#   targets:
#     - "https://www.example.com/"
#     - "https://www.google.com/"
# latency:
#   interval: 15s
#   timeout: 30s
#   retry:
#     count: 3
#     delay: 2s
#   targets:
#     - https://example.com/
#     - https://google.com/
# dns:
#   interval: 10s
#   timeout: 30s
#   retry:
#     count: 5
#     delay: 1s
#   targets:
#     - www.example.com
#     - www.google.com

# -- Configure a service monitor for prometheus-operator
serviceMonitor:
  # -- Enable the serviceMonitor
  enabled: false
  # -- Sets the scrape interval
  interval: 30s
  # -- Sets the scrape timeout
  scrapeTimeout: 5s
  # -- Additional label added to the service Monitor
  labels: {}
