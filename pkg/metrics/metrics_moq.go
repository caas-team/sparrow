// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package metrics

import (
	"github.com/prometheus/client_golang/prometheus"
	"sync"
)

// Ensure, that MetricsMock does implement Metrics.
// If this is not the case, regenerate this file with moq.
var _ Metrics = &MetricsMock{}

// MetricsMock is a mock implementation of Metrics.
//
//	func TestSomethingThatUsesMetrics(t *testing.T) {
//
//		// make and configure a mocked Metrics
//		mockedMetrics := &MetricsMock{
//			GetRegistryFunc: func() *prometheus.Registry {
//				panic("mock out the GetRegistry method")
//			},
//		}
//
//		// use mockedMetrics in code that requires Metrics
//		// and then make assertions.
//
//	}
type MetricsMock struct {
	// GetRegistryFunc mocks the GetRegistry method.
	GetRegistryFunc func() *prometheus.Registry

	// calls tracks calls to the methods.
	calls struct {
		// GetRegistry holds details about calls to the GetRegistry method.
		GetRegistry []struct {
		}
	}
	lockGetRegistry sync.RWMutex
}

// GetRegistry calls GetRegistryFunc.
func (mock *MetricsMock) GetRegistry() *prometheus.Registry {
	if mock.GetRegistryFunc == nil {
		panic("MetricsMock.GetRegistryFunc: method is nil but Metrics.GetRegistry was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetRegistry.Lock()
	mock.calls.GetRegistry = append(mock.calls.GetRegistry, callInfo)
	mock.lockGetRegistry.Unlock()
	return mock.GetRegistryFunc()
}

// GetRegistryCalls gets all the calls that were made to GetRegistry.
// Check the length with:
//
//	len(mockedMetrics.GetRegistryCalls())
func (mock *MetricsMock) GetRegistryCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetRegistry.RLock()
	calls = mock.calls.GetRegistry
	mock.lockGetRegistry.RUnlock()
	return calls
}
